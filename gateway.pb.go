// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: gateway.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This message is sent to the gateway to instruct it to "undo" a request. This
// means that the request will be removed from the session, along with all items
// that were a result of that request. If these items have already been sent to
// the client, the gateway will send `deleteItem` messages instructing the
// client to delete them
type UndoItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID of the request to undo
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *UndoItemRequest) Reset() {
	*x = UndoItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndoItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoItemRequest) ProtoMessage() {}

func (x *UndoItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndoItemRequest.ProtoReflect.Descriptor instead.
func (*UndoItemRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *UndoItemRequest) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

// This requests that the gateway "expands" an item. This involves executing all
// linked item requests within the session and sending the results to the
// client. It is recommended that this be used rather than simply sending each
// linked item request. Using this request type allows the Gateway to save the
// session more intelligently so that it can be bookmarked and used later.
// "Expanding" an item will mean an item always acts the same, even if its
// linked item requests have changed
type ExpandItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The item that should be expanded
	Item *Reference `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// How many levels of expansion should be run
	LinkDepth uint32 `protobuf:"varint,2,opt,name=linkDepth,proto3" json:"linkDepth,omitempty"`
}

func (x *ExpandItemRequest) Reset() {
	*x = ExpandItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpandItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandItemRequest) ProtoMessage() {}

func (x *ExpandItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandItemRequest.ProtoReflect.Descriptor instead.
func (*ExpandItemRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *ExpandItemRequest) GetItem() *Reference {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ExpandItemRequest) GetLinkDepth() uint32 {
	if x != nil {
		return x.LinkDepth
	}
	return 0
}

// Descriptor for a snapshot
type SnapshotDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique id to identify this snapshot
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// timestamp when this snapshot was created
	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// user supplied name of this snapshot
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// user supplied description of this snapshot
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// number of items in this snapshot
	Size uint32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SnapshotDescriptor) Reset() {
	*x = SnapshotDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDescriptor) ProtoMessage() {}

func (x *SnapshotDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDescriptor.ProtoReflect.Descriptor instead.
func (*SnapshotDescriptor) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotDescriptor) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

func (x *SnapshotDescriptor) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *SnapshotDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SnapshotDescriptor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SnapshotDescriptor) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Retrieve the list of stored query snapshots for the currently active account.
// Returns a SnapshotList
type ListSnapshots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSnapshots) Reset() {
	*x = ListSnapshots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnapshots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshots) ProtoMessage() {}

func (x *ListSnapshots) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshots.ProtoReflect.Descriptor instead.
func (*ListSnapshots) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

// response format for ListSnapshots
type SnapshotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Snapshots    []*SnapshotDescriptor `protobuf:"bytes,3,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
}

func (x *SnapshotList) Reset() {
	*x = SnapshotList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotList) ProtoMessage() {}

func (x *SnapshotList) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotList.ProtoReflect.Descriptor instead.
func (*SnapshotList) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotList) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SnapshotList) GetSnapshots() []*SnapshotDescriptor {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

// Ask the gateway to store the current state as snapshot with the specified details.
// Returns a SnapshotStored message when the snapshot is stored
type StoreSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user supplied name of this snapshot
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// user supplied description of this snapshot
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *StoreSnapshot) Reset() {
	*x = StoreSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSnapshot) ProtoMessage() {}

func (x *StoreSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSnapshot.ProtoReflect.Descriptor instead.
func (*StoreSnapshot) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *StoreSnapshot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreSnapshot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// After a snapshot is successfully stored, this reply with the new snapshot's details is sent.
type SnapshotStored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string              `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Snapshot     *SnapshotDescriptor `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *SnapshotStored) Reset() {
	*x = SnapshotStored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotStored) ProtoMessage() {}

func (x *SnapshotStored) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotStored.ProtoReflect.Descriptor instead.
func (*SnapshotStored) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotStored) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotStored) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SnapshotStored) GetSnapshot() *SnapshotDescriptor {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

// Ask the gateway to load the specified snapshot into the current state.
// Results are streamed to the client in the same way query results are.
type LoadSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique id of the snapshot to load
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *LoadSnapshot) Reset() {
	*x = LoadSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSnapshot) ProtoMessage() {}

func (x *LoadSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSnapshot.ProtoReflect.Descriptor instead.
func (*LoadSnapshot) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *LoadSnapshot) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type SnapshotLoadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *SnapshotLoadResult) Reset() {
	*x = SnapshotLoadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotLoadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotLoadResult) ProtoMessage() {}

func (x *SnapshotLoadResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotLoadResult.ProtoReflect.Descriptor instead.
func (*SnapshotLoadResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SnapshotLoadResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotLoadResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Delete the snapshot with the specified ID.
type DeleteSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique id of the snapshot to delete
	UUID []byte `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *DeleteSnapshot) Reset() {
	*x = DeleteSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshot) ProtoMessage() {}

func (x *DeleteSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshot.ProtoReflect.Descriptor instead.
func (*DeleteSnapshot) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteSnapshot) GetUUID() []byte {
	if x != nil {
		return x.UUID
	}
	return nil
}

type SnapshotDeleteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *SnapshotDeleteResult) Reset() {
	*x = SnapshotDeleteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDeleteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDeleteResult) ProtoMessage() {}

func (x *SnapshotDeleteResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDeleteResult.ProtoReflect.Descriptor instead.
func (*SnapshotDeleteResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *SnapshotDeleteResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotDeleteResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// A union of all request made to the gateway.
type GatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestType:
	//
	//	*GatewayRequest_NewRequest
	//	*GatewayRequest_CancelRequest
	//	*GatewayRequest_UndoRequest
	//	*GatewayRequest_ExcludeItem
	//	*GatewayRequest_IncludeItem
	//	*GatewayRequest_ExpandItem
	//	*GatewayRequest_UnexpandItem
	//	*GatewayRequest_ListSnapshots
	//	*GatewayRequest_StoreSnapshot
	//	*GatewayRequest_LoadSnapshot
	//	*GatewayRequest_DeleteSnapshot
	RequestType       isGatewayRequest_RequestType `protobuf_oneof:"request_type"`
	MinStatusInterval *durationpb.Duration         `protobuf:"bytes,2,opt,name=minStatusInterval,proto3,oneof" json:"minStatusInterval,omitempty"` // Minimum time between status updates. Setting this value too low can result in too many status messages
}

func (x *GatewayRequest) Reset() {
	*x = GatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequest) ProtoMessage() {}

func (x *GatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequest.ProtoReflect.Descriptor instead.
func (*GatewayRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{11}
}

func (m *GatewayRequest) GetRequestType() isGatewayRequest_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (x *GatewayRequest) GetNewRequest() *ItemRequest {
	if x, ok := x.GetRequestType().(*GatewayRequest_NewRequest); ok {
		return x.NewRequest
	}
	return nil
}

func (x *GatewayRequest) GetCancelRequest() *CancelItemRequest {
	if x, ok := x.GetRequestType().(*GatewayRequest_CancelRequest); ok {
		return x.CancelRequest
	}
	return nil
}

func (x *GatewayRequest) GetUndoRequest() *UndoItemRequest {
	if x, ok := x.GetRequestType().(*GatewayRequest_UndoRequest); ok {
		return x.UndoRequest
	}
	return nil
}

func (x *GatewayRequest) GetExcludeItem() *Reference {
	if x, ok := x.GetRequestType().(*GatewayRequest_ExcludeItem); ok {
		return x.ExcludeItem
	}
	return nil
}

func (x *GatewayRequest) GetIncludeItem() *Reference {
	if x, ok := x.GetRequestType().(*GatewayRequest_IncludeItem); ok {
		return x.IncludeItem
	}
	return nil
}

func (x *GatewayRequest) GetExpandItem() *ExpandItemRequest {
	if x, ok := x.GetRequestType().(*GatewayRequest_ExpandItem); ok {
		return x.ExpandItem
	}
	return nil
}

func (x *GatewayRequest) GetUnexpandItem() *Reference {
	if x, ok := x.GetRequestType().(*GatewayRequest_UnexpandItem); ok {
		return x.UnexpandItem
	}
	return nil
}

func (x *GatewayRequest) GetListSnapshots() *ListSnapshots {
	if x, ok := x.GetRequestType().(*GatewayRequest_ListSnapshots); ok {
		return x.ListSnapshots
	}
	return nil
}

func (x *GatewayRequest) GetStoreSnapshot() *StoreSnapshot {
	if x, ok := x.GetRequestType().(*GatewayRequest_StoreSnapshot); ok {
		return x.StoreSnapshot
	}
	return nil
}

func (x *GatewayRequest) GetLoadSnapshot() *LoadSnapshot {
	if x, ok := x.GetRequestType().(*GatewayRequest_LoadSnapshot); ok {
		return x.LoadSnapshot
	}
	return nil
}

func (x *GatewayRequest) GetDeleteSnapshot() *DeleteSnapshot {
	if x, ok := x.GetRequestType().(*GatewayRequest_DeleteSnapshot); ok {
		return x.DeleteSnapshot
	}
	return nil
}

func (x *GatewayRequest) GetMinStatusInterval() *durationpb.Duration {
	if x != nil {
		return x.MinStatusInterval
	}
	return nil
}

type isGatewayRequest_RequestType interface {
	isGatewayRequest_RequestType()
}

type GatewayRequest_NewRequest struct {
	// Adds a new request to the session, starting it immediately
	NewRequest *ItemRequest `protobuf:"bytes,1,opt,name=newRequest,proto3,oneof"`
}

type GatewayRequest_CancelRequest struct {
	// Cancel a running request
	CancelRequest *CancelItemRequest `protobuf:"bytes,3,opt,name=cancelRequest,proto3,oneof"`
}

type GatewayRequest_UndoRequest struct {
	// Undo the specified request, if it was the last request received by the gateway. This removes it and all of its results from the session
	UndoRequest *UndoItemRequest `protobuf:"bytes,4,opt,name=undoRequest,proto3,oneof"`
}

type GatewayRequest_ExcludeItem struct {
	// Exclude an item from the results
	ExcludeItem *Reference `protobuf:"bytes,5,opt,name=excludeItem,proto3,oneof"`
}

type GatewayRequest_IncludeItem struct {
	// Remove an item from the list of exclusions
	IncludeItem *Reference `protobuf:"bytes,6,opt,name=includeItem,proto3,oneof"`
}

type GatewayRequest_ExpandItem struct {
	// Expand linked items for a given item
	ExpandItem *ExpandItemRequest `protobuf:"bytes,7,opt,name=expandItem,proto3,oneof"`
}

type GatewayRequest_UnexpandItem struct {
	// Revert the expansions for a given item
	UnexpandItem *Reference `protobuf:"bytes,8,opt,name=unexpandItem,proto3,oneof"`
}

type GatewayRequest_ListSnapshots struct {
	// return the requested list of snapshots
	ListSnapshots *ListSnapshots `protobuf:"bytes,9,opt,name=listSnapshots,proto3,oneof"`
}

type GatewayRequest_StoreSnapshot struct {
	// store the current state as snapshot
	StoreSnapshot *StoreSnapshot `protobuf:"bytes,10,opt,name=storeSnapshot,proto3,oneof"`
}

type GatewayRequest_LoadSnapshot struct {
	// load a snapshot into the current state
	LoadSnapshot *LoadSnapshot `protobuf:"bytes,11,opt,name=loadSnapshot,proto3,oneof"`
}

type GatewayRequest_DeleteSnapshot struct {
	// delete a snapshot from the underlying storage
	DeleteSnapshot *DeleteSnapshot `protobuf:"bytes,12,opt,name=deleteSnapshot,proto3,oneof"`
}

func (*GatewayRequest_NewRequest) isGatewayRequest_RequestType() {}

func (*GatewayRequest_CancelRequest) isGatewayRequest_RequestType() {}

func (*GatewayRequest_UndoRequest) isGatewayRequest_RequestType() {}

func (*GatewayRequest_ExcludeItem) isGatewayRequest_RequestType() {}

func (*GatewayRequest_IncludeItem) isGatewayRequest_RequestType() {}

func (*GatewayRequest_ExpandItem) isGatewayRequest_RequestType() {}

func (*GatewayRequest_UnexpandItem) isGatewayRequest_RequestType() {}

func (*GatewayRequest_ListSnapshots) isGatewayRequest_RequestType() {}

func (*GatewayRequest_StoreSnapshot) isGatewayRequest_RequestType() {}

func (*GatewayRequest_LoadSnapshot) isGatewayRequest_RequestType() {}

func (*GatewayRequest_DeleteSnapshot) isGatewayRequest_RequestType() {}

// The gateway will always respond with this type of message,
// however the purpose of it is purely as a wrapper to the many different types
// of messages that the gateway can send
type GatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResponseType:
	//
	//	*GatewayResponse_NewItem
	//	*GatewayResponse_NewEdge
	//	*GatewayResponse_Status
	//	*GatewayResponse_Error
	//	*GatewayResponse_NewItemRequestError
	//	*GatewayResponse_DeleteItem
	//	*GatewayResponse_DeleteEdge
	//	*GatewayResponse_UpdateItem
	//	*GatewayResponse_SnapshotList
	//	*GatewayResponse_SnapshotStored
	//	*GatewayResponse_SnapshotLoadResult
	//	*GatewayResponse_SnapshotDeleteResult
	ResponseType isGatewayResponse_ResponseType `protobuf_oneof:"response_type"`
}

func (x *GatewayResponse) Reset() {
	*x = GatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayResponse) ProtoMessage() {}

func (x *GatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayResponse.ProtoReflect.Descriptor instead.
func (*GatewayResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{12}
}

func (m *GatewayResponse) GetResponseType() isGatewayResponse_ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return nil
}

func (x *GatewayResponse) GetNewItem() *Item {
	if x, ok := x.GetResponseType().(*GatewayResponse_NewItem); ok {
		return x.NewItem
	}
	return nil
}

func (x *GatewayResponse) GetNewEdge() *Edge {
	if x, ok := x.GetResponseType().(*GatewayResponse_NewEdge); ok {
		return x.NewEdge
	}
	return nil
}

func (x *GatewayResponse) GetStatus() *GatewayRequestStatus {
	if x, ok := x.GetResponseType().(*GatewayResponse_Status); ok {
		return x.Status
	}
	return nil
}

func (x *GatewayResponse) GetError() string {
	if x, ok := x.GetResponseType().(*GatewayResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *GatewayResponse) GetNewItemRequestError() *ItemRequestError {
	if x, ok := x.GetResponseType().(*GatewayResponse_NewItemRequestError); ok {
		return x.NewItemRequestError
	}
	return nil
}

func (x *GatewayResponse) GetDeleteItem() *Reference {
	if x, ok := x.GetResponseType().(*GatewayResponse_DeleteItem); ok {
		return x.DeleteItem
	}
	return nil
}

func (x *GatewayResponse) GetDeleteEdge() *Edge {
	if x, ok := x.GetResponseType().(*GatewayResponse_DeleteEdge); ok {
		return x.DeleteEdge
	}
	return nil
}

func (x *GatewayResponse) GetUpdateItem() *Item {
	if x, ok := x.GetResponseType().(*GatewayResponse_UpdateItem); ok {
		return x.UpdateItem
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotList() *SnapshotList {
	if x, ok := x.GetResponseType().(*GatewayResponse_SnapshotList); ok {
		return x.SnapshotList
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotStored() *SnapshotStored {
	if x, ok := x.GetResponseType().(*GatewayResponse_SnapshotStored); ok {
		return x.SnapshotStored
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotLoadResult() *SnapshotLoadResult {
	if x, ok := x.GetResponseType().(*GatewayResponse_SnapshotLoadResult); ok {
		return x.SnapshotLoadResult
	}
	return nil
}

func (x *GatewayResponse) GetSnapshotDeleteResult() *SnapshotDeleteResult {
	if x, ok := x.GetResponseType().(*GatewayResponse_SnapshotDeleteResult); ok {
		return x.SnapshotDeleteResult
	}
	return nil
}

type isGatewayResponse_ResponseType interface {
	isGatewayResponse_ResponseType()
}

type GatewayResponse_NewItem struct {
	NewItem *Item `protobuf:"bytes,2,opt,name=newItem,proto3,oneof"` // A new item that has been discovered
}

type GatewayResponse_NewEdge struct {
	NewEdge *Edge `protobuf:"bytes,3,opt,name=newEdge,proto3,oneof"` // A new edge between two items
}

type GatewayResponse_Status struct {
	Status *GatewayRequestStatus `protobuf:"bytes,4,opt,name=status,proto3,oneof"` // Status of the overall request
}

type GatewayResponse_Error struct {
	Error string `protobuf:"bytes,5,opt,name=error,proto3,oneof"` // An error that means the request couldn't be executed
}

type GatewayResponse_NewItemRequestError struct {
	NewItemRequestError *ItemRequestError `protobuf:"bytes,6,opt,name=newItemRequestError,proto3,oneof"` // A new error that was encountered as part of the request
}

type GatewayResponse_DeleteItem struct {
	DeleteItem *Reference `protobuf:"bytes,7,opt,name=deleteItem,proto3,oneof"` // An item that should be deleted from local state
}

type GatewayResponse_DeleteEdge struct {
	DeleteEdge *Edge `protobuf:"bytes,8,opt,name=deleteEdge,proto3,oneof"` // An edge that should be deleted form local state
}

type GatewayResponse_UpdateItem struct {
	UpdateItem *Item `protobuf:"bytes,9,opt,name=updateItem,proto3,oneof"` // An item that has already been sent, but contains new data, it should be updated to reflect this version
}

type GatewayResponse_SnapshotList struct {
	SnapshotList *SnapshotList `protobuf:"bytes,10,opt,name=snapshotList,proto3,oneof"`
}

type GatewayResponse_SnapshotStored struct {
	SnapshotStored *SnapshotStored `protobuf:"bytes,11,opt,name=snapshotStored,proto3,oneof"`
}

type GatewayResponse_SnapshotLoadResult struct {
	SnapshotLoadResult *SnapshotLoadResult `protobuf:"bytes,12,opt,name=snapshotLoadResult,proto3,oneof"`
}

type GatewayResponse_SnapshotDeleteResult struct {
	SnapshotDeleteResult *SnapshotDeleteResult `protobuf:"bytes,13,opt,name=snapshotDeleteResult,proto3,oneof"`
}

func (*GatewayResponse_NewItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_NewEdge) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_Status) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_Error) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_NewItemRequestError) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_DeleteItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_DeleteEdge) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_UpdateItem) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotList) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotStored) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotLoadResult) isGatewayResponse_ResponseType() {}

func (*GatewayResponse_SnapshotDeleteResult) isGatewayResponse_ResponseType() {}

// Contains the status of the gateway request
type GatewayRequestStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponderStates map[string]ResponderState     `protobuf:"bytes,1,rep,name=responderStates,proto3" json:"responderStates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=ResponderState"`
	Summary         *GatewayRequestStatus_Summary `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// Whether all items have finished being processed by the gateway. It is
	// possible for all responders to be complete, but the gateway is still
	// working. A request should only be considered complete when all working ==
	// 0 and postProcessingComplete == true
	PostProcessingComplete bool `protobuf:"varint,4,opt,name=postProcessingComplete,proto3" json:"postProcessingComplete,omitempty"`
}

func (x *GatewayRequestStatus) Reset() {
	*x = GatewayRequestStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayRequestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequestStatus) ProtoMessage() {}

func (x *GatewayRequestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequestStatus.ProtoReflect.Descriptor instead.
func (*GatewayRequestStatus) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *GatewayRequestStatus) GetResponderStates() map[string]ResponderState {
	if x != nil {
		return x.ResponderStates
	}
	return nil
}

func (x *GatewayRequestStatus) GetSummary() *GatewayRequestStatus_Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *GatewayRequestStatus) GetPostProcessingComplete() bool {
	if x != nil {
		return x.PostProcessingComplete
	}
	return false
}

type GatewayRequestStatus_Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Working    int32 `protobuf:"varint,1,opt,name=working,proto3" json:"working,omitempty"`
	Stalled    int32 `protobuf:"varint,2,opt,name=stalled,proto3" json:"stalled,omitempty"`
	Complete   int32 `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`
	Error      int32 `protobuf:"varint,4,opt,name=error,proto3" json:"error,omitempty"`
	Cancelled  int32 `protobuf:"varint,5,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Responders int32 `protobuf:"varint,6,opt,name=responders,proto3" json:"responders,omitempty"`
}

func (x *GatewayRequestStatus_Summary) Reset() {
	*x = GatewayRequestStatus_Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayRequestStatus_Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequestStatus_Summary) ProtoMessage() {}

func (x *GatewayRequestStatus_Summary) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequestStatus_Summary.ProtoReflect.Descriptor instead.
func (*GatewayRequestStatus_Summary) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13, 1}
}

func (x *GatewayRequestStatus_Summary) GetWorking() int32 {
	if x != nil {
		return x.Working
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetStalled() int32 {
	if x != nil {
		return x.Stalled
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetComplete() int32 {
	if x != nil {
		return x.Complete
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetCancelled() int32 {
	if x != nil {
		return x.Cancelled
	}
	return 0
}

func (x *GatewayRequestStatus_Summary) GetResponders() int32 {
	if x != nil {
		return x.Responders
	}
	return 0
}

var File_gateway_proto protoreflect.FileDescriptor

var file_gateway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25,
	0x0a, 0x0f, 0x55, 0x6e, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x6e, 0x6b, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x69, 0x6e, 0x6b, 0x44, 0x65, 0x70, 0x74, 0x68, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x22, 0x7f, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x0e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x22, 0x0a,
	0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49,
	0x44, 0x22, 0x52, 0x0a, 0x12, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x14, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xce, 0x05, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x0b, 0x75, 0x6e, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x64, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x0c,
	0x75, 0x6e, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x36,
	0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x33,
	0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4c,
	0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x22, 0xfc, 0x04, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x07, 0x6e, 0x65, 0x77,
	0x45, 0x64, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x45, 0x64, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x13, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x12,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52,
	0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x14, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xe2, 0x03, 0x0a, 0x14, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x70, 0x6f, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x1a, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xad, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x74, 0x65, 0x63,
	0x68, 0x2f, 0x73, 0x64, 0x70, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x64, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData = file_gateway_proto_rawDesc
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_proto_rawDescData)
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_gateway_proto_goTypes = []interface{}{
	(*UndoItemRequest)(nil),              // 0: UndoItemRequest
	(*ExpandItemRequest)(nil),            // 1: ExpandItemRequest
	(*SnapshotDescriptor)(nil),           // 2: SnapshotDescriptor
	(*ListSnapshots)(nil),                // 3: ListSnapshots
	(*SnapshotList)(nil),                 // 4: SnapshotList
	(*StoreSnapshot)(nil),                // 5: StoreSnapshot
	(*SnapshotStored)(nil),               // 6: SnapshotStored
	(*LoadSnapshot)(nil),                 // 7: LoadSnapshot
	(*SnapshotLoadResult)(nil),           // 8: SnapshotLoadResult
	(*DeleteSnapshot)(nil),               // 9: DeleteSnapshot
	(*SnapshotDeleteResult)(nil),         // 10: SnapshotDeleteResult
	(*GatewayRequest)(nil),               // 11: GatewayRequest
	(*GatewayResponse)(nil),              // 12: GatewayResponse
	(*GatewayRequestStatus)(nil),         // 13: GatewayRequestStatus
	nil,                                  // 14: GatewayRequestStatus.ResponderStatesEntry
	(*GatewayRequestStatus_Summary)(nil), // 15: GatewayRequestStatus.Summary
	(*Reference)(nil),                    // 16: Reference
	(*timestamppb.Timestamp)(nil),        // 17: google.protobuf.Timestamp
	(*ItemRequest)(nil),                  // 18: ItemRequest
	(*CancelItemRequest)(nil),            // 19: CancelItemRequest
	(*durationpb.Duration)(nil),          // 20: google.protobuf.Duration
	(*Item)(nil),                         // 21: Item
	(*Edge)(nil),                         // 22: Edge
	(*ItemRequestError)(nil),             // 23: ItemRequestError
	(ResponderState)(0),                  // 24: ResponderState
}
var file_gateway_proto_depIdxs = []int32{
	16, // 0: ExpandItemRequest.item:type_name -> Reference
	17, // 1: SnapshotDescriptor.created:type_name -> google.protobuf.Timestamp
	2,  // 2: SnapshotList.snapshots:type_name -> SnapshotDescriptor
	2,  // 3: SnapshotStored.snapshot:type_name -> SnapshotDescriptor
	18, // 4: GatewayRequest.newRequest:type_name -> ItemRequest
	19, // 5: GatewayRequest.cancelRequest:type_name -> CancelItemRequest
	0,  // 6: GatewayRequest.undoRequest:type_name -> UndoItemRequest
	16, // 7: GatewayRequest.excludeItem:type_name -> Reference
	16, // 8: GatewayRequest.includeItem:type_name -> Reference
	1,  // 9: GatewayRequest.expandItem:type_name -> ExpandItemRequest
	16, // 10: GatewayRequest.unexpandItem:type_name -> Reference
	3,  // 11: GatewayRequest.listSnapshots:type_name -> ListSnapshots
	5,  // 12: GatewayRequest.storeSnapshot:type_name -> StoreSnapshot
	7,  // 13: GatewayRequest.loadSnapshot:type_name -> LoadSnapshot
	9,  // 14: GatewayRequest.deleteSnapshot:type_name -> DeleteSnapshot
	20, // 15: GatewayRequest.minStatusInterval:type_name -> google.protobuf.Duration
	21, // 16: GatewayResponse.newItem:type_name -> Item
	22, // 17: GatewayResponse.newEdge:type_name -> Edge
	13, // 18: GatewayResponse.status:type_name -> GatewayRequestStatus
	23, // 19: GatewayResponse.newItemRequestError:type_name -> ItemRequestError
	16, // 20: GatewayResponse.deleteItem:type_name -> Reference
	22, // 21: GatewayResponse.deleteEdge:type_name -> Edge
	21, // 22: GatewayResponse.updateItem:type_name -> Item
	4,  // 23: GatewayResponse.snapshotList:type_name -> SnapshotList
	6,  // 24: GatewayResponse.snapshotStored:type_name -> SnapshotStored
	8,  // 25: GatewayResponse.snapshotLoadResult:type_name -> SnapshotLoadResult
	10, // 26: GatewayResponse.snapshotDeleteResult:type_name -> SnapshotDeleteResult
	14, // 27: GatewayRequestStatus.responderStates:type_name -> GatewayRequestStatus.ResponderStatesEntry
	15, // 28: GatewayRequestStatus.summary:type_name -> GatewayRequestStatus.Summary
	24, // 29: GatewayRequestStatus.ResponderStatesEntry.value:type_name -> ResponderState
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	file_items_proto_init()
	file_responses_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndoItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpandItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnapshots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotStored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotLoadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDeleteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayRequestStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayRequestStatus_Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gateway_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GatewayRequest_NewRequest)(nil),
		(*GatewayRequest_CancelRequest)(nil),
		(*GatewayRequest_UndoRequest)(nil),
		(*GatewayRequest_ExcludeItem)(nil),
		(*GatewayRequest_IncludeItem)(nil),
		(*GatewayRequest_ExpandItem)(nil),
		(*GatewayRequest_UnexpandItem)(nil),
		(*GatewayRequest_ListSnapshots)(nil),
		(*GatewayRequest_StoreSnapshot)(nil),
		(*GatewayRequest_LoadSnapshot)(nil),
		(*GatewayRequest_DeleteSnapshot)(nil),
	}
	file_gateway_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GatewayResponse_NewItem)(nil),
		(*GatewayResponse_NewEdge)(nil),
		(*GatewayResponse_Status)(nil),
		(*GatewayResponse_Error)(nil),
		(*GatewayResponse_NewItemRequestError)(nil),
		(*GatewayResponse_DeleteItem)(nil),
		(*GatewayResponse_DeleteEdge)(nil),
		(*GatewayResponse_UpdateItem)(nil),
		(*GatewayResponse_SnapshotList)(nil),
		(*GatewayResponse_SnapshotStored)(nil),
		(*GatewayResponse_SnapshotLoadResult)(nil),
		(*GatewayResponse_SnapshotDeleteResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_rawDesc = nil
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
