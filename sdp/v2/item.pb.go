// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: sdp/v2/item.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the health of something, the meaning of each state may depend on
// the context in which it is used but should be reasonably obvious
type Health int32

const (
	Health_HEALTH_UNSPECIFIED Health = 0 // The health could not be determined
	Health_HEALTH_OK          Health = 1 // Functioning normally
	Health_HEALTH_WARNING     Health = 2 // Functioning, but degraded
	Health_HEALTH_ERROR       Health = 3 // Not functioning
	Health_HEALTH_PENDING     Health = 4 // Health state is transitioning, such as when something is first provisioned
)

// Enum value maps for Health.
var (
	Health_name = map[int32]string{
		0: "HEALTH_UNSPECIFIED",
		1: "HEALTH_OK",
		2: "HEALTH_WARNING",
		3: "HEALTH_ERROR",
		4: "HEALTH_PENDING",
	}
	Health_value = map[string]int32{
		"HEALTH_UNSPECIFIED": 0,
		"HEALTH_OK":          1,
		"HEALTH_WARNING":     2,
		"HEALTH_ERROR":       3,
		"HEALTH_PENDING":     4,
	}
)

func (x Health) Enum() *Health {
	p := new(Health)
	*p = x
	return p
}

func (x Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Health) Descriptor() protoreflect.EnumDescriptor {
	return file_sdp_v2_item_proto_enumTypes[0].Descriptor()
}

func (Health) Type() protoreflect.EnumType {
	return &file_sdp_v2_item_proto_enumTypes[0]
}

func (x Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Health.Descriptor instead.
func (Health) EnumDescriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{0}
}

// This is the same as Item within the package with a couple of exceptions, no
// real reason why this whole thing couldn't be modelled in protobuf though if
// required. Just need to decide what if anything should remain private
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The scope within which the item is unique. Item uniqueness is determined
	// by the combination of type and unique_attribute value. However it is
	// possible for the same item to exist in many scopes. There is not formal
	// definition for what a scope should be other than the fact that it should
	// be somewhat descriptive and should ensure item uniqueness
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// The sdp type of this Item. Determines what the item is and what its attributes mean.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The name of the attribute that is the primary key for this item.
	UniqueAttribute string `protobuf:"bytes,3,opt,name=unique_attribute,json=uniqueAttribute,proto3" json:"unique_attribute,omitempty"`
	// The disccovered attributes of this item.
	Attributes *structpb.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Metadata about the item. Where it came from, how long it took to discover, etc.
	Metadata *Metadata `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// (optional) Represents the health of the item. Only items that have a
	// clearly relevant health attribute should return a value for health
	Health *Health `protobuf:"varint,6,opt,name=health,proto3,enum=sdp.v2.Health,oneof" json:"health,omitempty"`
	// Arbitrary key-value pairs that can be used to store additional information.
	// These tags are retrieved from the source and map to the target's definition
	// of a tag (e.g. AWS tags, Kubernetes labels, etc.)
	Tags map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Item) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Item) GetUniqueAttribute() string {
	if x != nil {
		return x.UniqueAttribute
	}
	return ""
}

func (x *Item) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Item) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Item) GetHealth() Health {
	if x != nil && x.Health != nil {
		return *x.Health
	}
	return Health_HEALTH_UNSPECIFIED
}

func (x *Item) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Metadata about the item. Where it came from, how long it took to discover, etc.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the name of the source that was used to find the item.
	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	// The time that the item was found
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Whether the item should be hidden/ignored by user-facing things such as
	// GUIs and databases.
	//
	// Some types of items are only relevant in calculating higher-layer
	// abstractions and are therefore always hidden. A good example of this would
	// be the output of a command. This could be used by a remote source to gather
	// information, but we don't actually want to show the user all the commands
	// that were run, just the final item returned by the source
	Hidden bool `protobuf:"varint,3,opt,name=hidden,proto3" json:"hidden,omitempty"`
	// The UUID of the QUERY that caused this item to be found
	SourceQueryUuid string `protobuf:"bytes,4,opt,name=source_query_uuid,json=sourceQueryUuid,proto3" json:"source_query_uuid,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *Metadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Metadata) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Metadata) GetSourceQueryUuid() string {
	if x != nil {
		return x.SourceQueryUuid
	}
	return ""
}

// This is a list of items, like a List() would return
type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{2}
}

func (x *Items) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// This message stores additional information on Edges (and edge-like constructs) to determine how configuration changes can impact
// the linked items.
//
//	Blast Propagation options:
//
// |-------|-------|----------------------
// |   in  |  out  | result
// |-------|-------|----------------------
// | false | false | no change in any item can affect the other
// | false | true  | a change to this item can affect its linked items
// |       |       | example: a change to an EC2 instance can affect its DNS name (in the sense that other items depending on that DNS name will see the impact)
// | true  | false | a change to linked items can affect this item
// |       |       | example: changing the KMS key used by a DynamoDB table can impact the table, but no change to the table can impact the key
// | true  | true  | changes on boths sides of the link can affect the other
// |       |       | example: changes to both EC2 Instances and their volumes can affect the other side of the relation.
type BlastPropagation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// is true if changes on linked items can affect this item
	In bool `protobuf:"varint,1,opt,name=in,proto3" json:"in,omitempty"`
	// is true if changes on this item can affect linked items
	Out bool `protobuf:"varint,2,opt,name=out,proto3" json:"out,omitempty"`
}

func (x *BlastPropagation) Reset() {
	*x = BlastPropagation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlastPropagation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlastPropagation) ProtoMessage() {}

func (x *BlastPropagation) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlastPropagation.ProtoReflect.Descriptor instead.
func (*BlastPropagation) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{3}
}

func (x *BlastPropagation) GetIn() bool {
	if x != nil {
		return x.In
	}
	return false
}

func (x *BlastPropagation) GetOut() bool {
	if x != nil {
		return x.Out
	}
	return false
}

// Reference to an item
//
// The uniqueness of an item is determined by the combination of:
//
//   - Scope
//   - Type
//   - unique_attribute_value
type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope                string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Type                 string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	UniqueAttributeValue string `protobuf:"bytes,3,opt,name=unique_attribute_value,json=uniqueAttributeValue,proto3" json:"unique_attribute_value,omitempty"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{4}
}

func (x *Reference) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Reference) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Reference) GetUniqueAttributeValue() string {
	if x != nil {
		return x.UniqueAttributeValue
	}
	return ""
}

// Edge represents a link between two items. The order of the from and to values
// determines semantic interpretation of what this edge means. The
// blast_propagation field stores additional information on how configuration
// changes can impact the linked items.
//
// Depending of the progress of processing, this can be two queries, an item and
// a query or two items. As results propagate through the system, the various
// processors along the way are responsible for holding back edges with queries
// that they can resolve, and replacing them with the resolved items before
// passing them on, conditional on the requirements of link depth and blast
// propagation query settings.
type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to From:
	//
	//	*Edge_FromItemRef
	//	*Edge_FromQuery
	From isEdge_From `protobuf_oneof:"from"`
	// Types that are assignable to To:
	//
	//	*Edge_ToItemRef
	//	*Edge_ToQuery
	To               isEdge_To         `protobuf_oneof:"to"`
	BlastPropagation *BlastPropagation `protobuf:"bytes,5,opt,name=blast_propagation,json=blastPropagation,proto3" json:"blast_propagation,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_sdp_v2_item_proto_rawDescGZIP(), []int{5}
}

func (m *Edge) GetFrom() isEdge_From {
	if m != nil {
		return m.From
	}
	return nil
}

func (x *Edge) GetFromItemRef() *Reference {
	if x, ok := x.GetFrom().(*Edge_FromItemRef); ok {
		return x.FromItemRef
	}
	return nil
}

func (x *Edge) GetFromQuery() *Query {
	if x, ok := x.GetFrom().(*Edge_FromQuery); ok {
		return x.FromQuery
	}
	return nil
}

func (m *Edge) GetTo() isEdge_To {
	if m != nil {
		return m.To
	}
	return nil
}

func (x *Edge) GetToItemRef() *Reference {
	if x, ok := x.GetTo().(*Edge_ToItemRef); ok {
		return x.ToItemRef
	}
	return nil
}

func (x *Edge) GetToQuery() *Query {
	if x, ok := x.GetTo().(*Edge_ToQuery); ok {
		return x.ToQuery
	}
	return nil
}

func (x *Edge) GetBlastPropagation() *BlastPropagation {
	if x != nil {
		return x.BlastPropagation
	}
	return nil
}

type isEdge_From interface {
	isEdge_From()
}

type Edge_FromItemRef struct {
	FromItemRef *Reference `protobuf:"bytes,1,opt,name=from_item_ref,json=fromItemRef,proto3,oneof"`
}

type Edge_FromQuery struct {
	FromQuery *Query `protobuf:"bytes,2,opt,name=from_query,json=fromQuery,proto3,oneof"`
}

func (*Edge_FromItemRef) isEdge_From() {}

func (*Edge_FromQuery) isEdge_From() {}

type isEdge_To interface {
	isEdge_To()
}

type Edge_ToItemRef struct {
	ToItemRef *Reference `protobuf:"bytes,3,opt,name=to_item_ref,json=toItemRef,proto3,oneof"`
}

type Edge_ToQuery struct {
	ToQuery *Query `protobuf:"bytes,4,opt,name=to_query,json=toQuery,proto3,oneof"`
}

func (*Edge_ToItemRef) isEdge_To() {}

func (*Edge_ToQuery) isEdge_To() {}

var File_sdp_v2_item_proto protoreflect.FileDescriptor

var file_sdp_v2_item_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x64, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x64, 0x70, 0x2f,
	0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf,
	0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x22, 0xa9, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x42, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x22,
	0x6b, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x02, 0x0a,
	0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x12, 0x2e,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x33,
	0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x01, 0x52, 0x07, 0x74, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x45, 0x0a, 0x11, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x64, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x04,
	0x0a, 0x02, 0x74, 0x6f, 0x2a, 0x69, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x12, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f,
	0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x45, 0x41,
	0x4c, 0x54, 0x48, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x48,
	0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x76,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x73, 0x64, 0x70, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x64, 0x70, 0x2f, 0x76, 0x32, 0x3b, 0x73, 0x64, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdp_v2_item_proto_rawDescOnce sync.Once
	file_sdp_v2_item_proto_rawDescData = file_sdp_v2_item_proto_rawDesc
)

func file_sdp_v2_item_proto_rawDescGZIP() []byte {
	file_sdp_v2_item_proto_rawDescOnce.Do(func() {
		file_sdp_v2_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdp_v2_item_proto_rawDescData)
	})
	return file_sdp_v2_item_proto_rawDescData
}

var file_sdp_v2_item_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sdp_v2_item_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sdp_v2_item_proto_goTypes = []interface{}{
	(Health)(0),                   // 0: sdp.v2.Health
	(*Item)(nil),                  // 1: sdp.v2.Item
	(*Metadata)(nil),              // 2: sdp.v2.Metadata
	(*Items)(nil),                 // 3: sdp.v2.Items
	(*BlastPropagation)(nil),      // 4: sdp.v2.BlastPropagation
	(*Reference)(nil),             // 5: sdp.v2.Reference
	(*Edge)(nil),                  // 6: sdp.v2.Edge
	nil,                           // 7: sdp.v2.Item.TagsEntry
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*Query)(nil),                 // 10: sdp.v2.Query
}
var file_sdp_v2_item_proto_depIdxs = []int32{
	8,  // 0: sdp.v2.Item.attributes:type_name -> google.protobuf.Struct
	2,  // 1: sdp.v2.Item.metadata:type_name -> sdp.v2.Metadata
	0,  // 2: sdp.v2.Item.health:type_name -> sdp.v2.Health
	7,  // 3: sdp.v2.Item.tags:type_name -> sdp.v2.Item.TagsEntry
	9,  // 4: sdp.v2.Metadata.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 5: sdp.v2.Items.items:type_name -> sdp.v2.Item
	5,  // 6: sdp.v2.Edge.from_item_ref:type_name -> sdp.v2.Reference
	10, // 7: sdp.v2.Edge.from_query:type_name -> sdp.v2.Query
	5,  // 8: sdp.v2.Edge.to_item_ref:type_name -> sdp.v2.Reference
	10, // 9: sdp.v2.Edge.to_query:type_name -> sdp.v2.Query
	4,  // 10: sdp.v2.Edge.blast_propagation:type_name -> sdp.v2.BlastPropagation
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sdp_v2_item_proto_init() }
func file_sdp_v2_item_proto_init() {
	if File_sdp_v2_item_proto != nil {
		return
	}
	file_sdp_v2_query_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sdp_v2_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlastPropagation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sdp_v2_item_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_sdp_v2_item_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Edge_FromItemRef)(nil),
		(*Edge_FromQuery)(nil),
		(*Edge_ToItemRef)(nil),
		(*Edge_ToQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdp_v2_item_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdp_v2_item_proto_goTypes,
		DependencyIndexes: file_sdp_v2_item_proto_depIdxs,
		EnumInfos:         file_sdp_v2_item_proto_enumTypes,
		MessageInfos:      file_sdp_v2_item_proto_msgTypes,
	}.Build()
	File_sdp_v2_item_proto = out.File
	file_sdp_v2_item_proto_rawDesc = nil
	file_sdp_v2_item_proto_goTypes = nil
	file_sdp_v2_item_proto_depIdxs = nil
}
