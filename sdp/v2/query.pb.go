// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: sdp/v2/query.proto

package sdp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryMethod represents the available query methods. The details of these
// methods are:
//
// GET: This takes a single unique query and should only return a single item.
//
//	If an item matching the parameter passed doesn't exist the server should
//	fail
//
// LIST: This takes no query (or ignores it) and should return all items that it
//
//	can find
//
// SEARCH: This takes a non-unique query which is designed to be used as a
//
//	search term. It should return some number of items (or zero) which
//	match the query
type QueryMethod int32

const (
	QueryMethod_QUERY_METHOD_UNSPECIFIED QueryMethod = 0
	QueryMethod_QUERY_METHOD_GET         QueryMethod = 1
	QueryMethod_QUERY_METHOD_LIST        QueryMethod = 2
	QueryMethod_QUERY_METHOD_SEARCH      QueryMethod = 3
)

// Enum value maps for QueryMethod.
var (
	QueryMethod_name = map[int32]string{
		0: "QUERY_METHOD_UNSPECIFIED",
		1: "QUERY_METHOD_GET",
		2: "QUERY_METHOD_LIST",
		3: "QUERY_METHOD_SEARCH",
	}
	QueryMethod_value = map[string]int32{
		"QUERY_METHOD_UNSPECIFIED": 0,
		"QUERY_METHOD_GET":         1,
		"QUERY_METHOD_LIST":        2,
		"QUERY_METHOD_SEARCH":      3,
	}
)

func (x QueryMethod) Enum() *QueryMethod {
	p := new(QueryMethod)
	*p = x
	return p
}

func (x QueryMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_sdp_v2_query_proto_enumTypes[0].Descriptor()
}

func (QueryMethod) Type() protoreflect.EnumType {
	return &file_sdp_v2_query_proto_enumTypes[0]
}

func (x QueryMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryMethod.Descriptor instead.
func (QueryMethod) EnumDescriptor() ([]byte, []int) {
	return file_sdp_v2_query_proto_rawDescGZIP(), []int{0}
}

// The error type. Any types in here will be gracefully handled unless the
// type os "OTHER"
type QueryError_ErrorType int32

const (
	// This should be used of all other failure modes, such as timeouts,
	// unexpected failures when querying state, permissions errors etc. Errors
	// that return this type should not be cached as the error may be transient.
	QueryError_ERROR_TYPE_UNSPECIFIED QueryError_ErrorType = 0
	// the query was semantically correct, but the source could not execute it due to a setup isse, like invalid credentials or missing permissions or a runtime issue, like a network error or a service being down. The query can be retried after the issue has been resolved.
	QueryError_ERROR_TYPE_TEMPORARY_ERROR QueryError_ErrorType = 1
	// there was a permanent error when executing the query, like a syntax error in the query. The query will not succeed if retried.
	QueryError_ERROR_TYPE_PERMANENT_ERROR QueryError_ErrorType = 2
	// there was an implementation issue in the source that caused the query to fail. The query can be retried after the issue has been resolved.
	QueryError_ERROR_TYPE_IMPLEMENTATION_ERROR QueryError_ErrorType = 3
)

// Enum value maps for QueryError_ErrorType.
var (
	QueryError_ErrorType_name = map[int32]string{
		0: "ERROR_TYPE_UNSPECIFIED",
		1: "ERROR_TYPE_TEMPORARY_ERROR",
		2: "ERROR_TYPE_PERMANENT_ERROR",
		3: "ERROR_TYPE_IMPLEMENTATION_ERROR",
	}
	QueryError_ErrorType_value = map[string]int32{
		"ERROR_TYPE_UNSPECIFIED":          0,
		"ERROR_TYPE_TEMPORARY_ERROR":      1,
		"ERROR_TYPE_PERMANENT_ERROR":      2,
		"ERROR_TYPE_IMPLEMENTATION_ERROR": 3,
	}
)

func (x QueryError_ErrorType) Enum() *QueryError_ErrorType {
	p := new(QueryError_ErrorType)
	*p = x
	return p
}

func (x QueryError_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryError_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_sdp_v2_query_proto_enumTypes[1].Descriptor()
}

func (QueryError_ErrorType) Type() protoreflect.EnumType {
	return &file_sdp_v2_query_proto_enumTypes[1]
}

func (x QueryError_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryError_ErrorType.Descriptor instead.
func (QueryError_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_sdp_v2_query_proto_rawDescGZIP(), []int{1, 0}
}

// Query represents a query for an item or a list of items.
type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A UUID to uniquely identify the query. This should be stored by the
	// requester as it will be needed later if the requester wants to cancel a
	// query. It should be stored as 128 bytes, as opposed to the textual
	// representation
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The deadline for this query. When the deadline elapses, results become
	// irrelevant for the sender and any processing can stop. The deadline gets
	// propagated to all related queries (e.g. for linked items) and processes.
	// Note: there is currently a migration going on from timeouts to durations,
	// so depending on which service is hit, either one is evaluated.
	Deadline *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// Which method to use when looking for it
	Method QueryMethod `protobuf:"varint,3,opt,name=method,proto3,enum=sdp.v2.QueryMethod" json:"method,omitempty"`
	// The scope for which we are requesting. To query all scopes use the the
	// wildcard '*'
	Scope string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// The type of item to search for. "*" means all types
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// What query should be passed to that method
	Query string `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	// Defines how this query should behave when finding new items
	RecursionBehaviour *Query_RecursionBehaviour `protobuf:"bytes,7,opt,name=recursion_behaviour,json=recursionBehaviour,proto3" json:"recursion_behaviour,omitempty"`
	// Whether to ignore the cache and execute the query regardless.
	//
	// By default sources will implement some level of caching, this is
	// particularly important for linked items as a single query with a large link
	// depth may result in the same item being queried many times as links are
	// resolved and more and more items link to each other. However if required
	// this caching can be turned off using this parameter
	IgnoreCache bool `protobuf:"varint,8,opt,name=ignore_cache,json=ignoreCache,proto3" json:"ignore_cache,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_sdp_v2_query_proto_rawDescGZIP(), []int{0}
}

func (x *Query) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Query) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *Query) GetMethod() QueryMethod {
	if x != nil {
		return x.Method
	}
	return QueryMethod_QUERY_METHOD_UNSPECIFIED
}

func (x *Query) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Query) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Query) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *Query) GetRecursionBehaviour() *Query_RecursionBehaviour {
	if x != nil {
		return x.RecursionBehaviour
	}
	return nil
}

func (x *Query) GetIgnoreCache() bool {
	if x != nil {
		return x.IgnoreCache
	}
	return false
}

// QueryError is sent back when an item query fails
type QueryError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType QueryError_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=sdp.v2.QueryError_ErrorType" json:"error_type,omitempty"`
	// A user-friendly textual representation of the error
	ErrorString string `protobuf:"bytes,2,opt,name=error_string,json=errorString,proto3" json:"error_string,omitempty"`
}

func (x *QueryError) Reset() {
	*x = QueryError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryError) ProtoMessage() {}

func (x *QueryError) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryError.ProtoReflect.Descriptor instead.
func (*QueryError) Descriptor() ([]byte, []int) {
	return file_sdp_v2_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryError) GetErrorType() QueryError_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return QueryError_ERROR_TYPE_UNSPECIFIED
}

func (x *QueryError) GetErrorString() string {
	if x != nil {
		return x.ErrorString
	}
	return ""
}

// Defines how this query should behave when finding new items
type Query_RecursionBehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How deeply to link items. A value of 0 will mean that items are not linked.
	// To resolve linked items "infinitely" simply set this to a high number, with
	// the highest being 4,294,967,295. While this isn't truly *infinite*, chances
	// are that it is effectively the same, think six degrees of separation etc.
	LinkDepth uint32 `protobuf:"varint,1,opt,name=link_depth,json=linkDepth,proto3" json:"link_depth,omitempty"`
	// set to true to only follow links that propagate configuration change impact
	FollowOnlyBlastPropagation bool `protobuf:"varint,2,opt,name=follow_only_blast_propagation,json=followOnlyBlastPropagation,proto3" json:"follow_only_blast_propagation,omitempty"`
}

func (x *Query_RecursionBehaviour) Reset() {
	*x = Query_RecursionBehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdp_v2_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query_RecursionBehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_RecursionBehaviour) ProtoMessage() {}

func (x *Query_RecursionBehaviour) ProtoReflect() protoreflect.Message {
	mi := &file_sdp_v2_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_RecursionBehaviour.ProtoReflect.Descriptor instead.
func (*Query_RecursionBehaviour) Descriptor() ([]byte, []int) {
	return file_sdp_v2_query_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Query_RecursionBehaviour) GetLinkDepth() uint32 {
	if x != nil {
		return x.LinkDepth
	}
	return 0
}

func (x *Query_RecursionBehaviour) GetFollowOnlyBlastPropagation() bool {
	if x != nil {
		return x.FollowOnlyBlastPropagation
	}
	return false
}

var File_sdp_v2_query_proto protoreflect.FileDescriptor

var file_sdp_v2_query_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x64, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae, 0x03,
	0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x51, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x63,
	0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x75, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x76, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x1d, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x62, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfb,
	0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x64, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x8c, 0x01,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x59, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x71, 0x0a, 0x0b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x18, 0x51,
	0x55, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x03, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x76,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x64, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x73, 0x64, 0x70, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x64, 0x70, 0x2f, 0x76, 0x32, 0x3b, 0x73, 0x64, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdp_v2_query_proto_rawDescOnce sync.Once
	file_sdp_v2_query_proto_rawDescData = file_sdp_v2_query_proto_rawDesc
)

func file_sdp_v2_query_proto_rawDescGZIP() []byte {
	file_sdp_v2_query_proto_rawDescOnce.Do(func() {
		file_sdp_v2_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdp_v2_query_proto_rawDescData)
	})
	return file_sdp_v2_query_proto_rawDescData
}

var file_sdp_v2_query_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sdp_v2_query_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sdp_v2_query_proto_goTypes = []interface{}{
	(QueryMethod)(0),                 // 0: sdp.v2.QueryMethod
	(QueryError_ErrorType)(0),        // 1: sdp.v2.QueryError.ErrorType
	(*Query)(nil),                    // 2: sdp.v2.Query
	(*QueryError)(nil),               // 3: sdp.v2.QueryError
	(*Query_RecursionBehaviour)(nil), // 4: sdp.v2.Query.RecursionBehaviour
	(*timestamppb.Timestamp)(nil),    // 5: google.protobuf.Timestamp
}
var file_sdp_v2_query_proto_depIdxs = []int32{
	5, // 0: sdp.v2.Query.deadline:type_name -> google.protobuf.Timestamp
	0, // 1: sdp.v2.Query.method:type_name -> sdp.v2.QueryMethod
	4, // 2: sdp.v2.Query.recursion_behaviour:type_name -> sdp.v2.Query.RecursionBehaviour
	1, // 3: sdp.v2.QueryError.error_type:type_name -> sdp.v2.QueryError.ErrorType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sdp_v2_query_proto_init() }
func file_sdp_v2_query_proto_init() {
	if File_sdp_v2_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdp_v2_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdp_v2_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query_RecursionBehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdp_v2_query_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdp_v2_query_proto_goTypes,
		DependencyIndexes: file_sdp_v2_query_proto_depIdxs,
		EnumInfos:         file_sdp_v2_query_proto_enumTypes,
		MessageInfos:      file_sdp_v2_query_proto_msgTypes,
	}.Build()
	File_sdp_v2_query_proto = out.File
	file_sdp_v2_query_proto_rawDesc = nil
	file_sdp_v2_query_proto_goTypes = nil
	file_sdp_v2_query_proto_depIdxs = nil
}
