// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: changes.proto

package sdpconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	sdp_go "github.com/overmindtech/sdp-go"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ChangesServiceName is the fully-qualified name of the ChangesService service.
	ChangesServiceName = "changes.ChangesService"
)

// ChangesServiceClient is a client for the changes.ChangesService service.
type ChangesServiceClient interface {
	ListApp(context.Context, *connect_go.Request[sdp_go.ListAppRequest]) (*connect_go.Response[sdp_go.ListAppResponse], error)
	CreateApp(context.Context, *connect_go.Request[sdp_go.CreateAppRequest]) (*connect_go.Response[sdp_go.CreateAppResponse], error)
	GetApp(context.Context, *connect_go.Request[sdp_go.GetAppRequest]) (*connect_go.Response[sdp_go.GetAppResponse], error)
	UpdateApp(context.Context, *connect_go.Request[sdp_go.UpdateAppRequest]) (*connect_go.Response[sdp_go.UpdateAppResponse], error)
	DeleteApp(context.Context, *connect_go.Request[sdp_go.DeleteAppRequest]) (*connect_go.Response[sdp_go.DeleteAppResponse], error)
	ListChange(context.Context, *connect_go.Request[sdp_go.ListChangeRequest]) (*connect_go.Response[sdp_go.ListChangeResponse], error)
	CreateChange(context.Context, *connect_go.Request[sdp_go.CreateChangeRequest]) (*connect_go.Response[sdp_go.CreateChangeResponse], error)
	GetChange(context.Context, *connect_go.Request[sdp_go.GetChangeRequest]) (*connect_go.Response[sdp_go.GetChangeResponse], error)
	UpdateChange(context.Context, *connect_go.Request[sdp_go.UpdateChangeRequest]) (*connect_go.Response[sdp_go.UpdateChangeResponse], error)
	DeleteChange(context.Context, *connect_go.Request[sdp_go.DeleteChangeRequest]) (*connect_go.Response[sdp_go.DeleteChangeResponse], error)
	GetOnboarding(context.Context, *connect_go.Request[sdp_go.GetOnboardingRequest]) (*connect_go.Response[sdp_go.GetOnboardingResponse], error)
	UpdateOnboarding(context.Context, *connect_go.Request[sdp_go.UpdateOnboardingRequest]) (*connect_go.Response[sdp_go.UpdateOnboardingResponse], error)
	GetChangesHome(context.Context, *connect_go.Request[sdp_go.GetChangesHomeRequest]) (*connect_go.Response[sdp_go.GetChangesHomeResponse], error)
}

// NewChangesServiceClient constructs a client for the changes.ChangesService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewChangesServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ChangesServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &changesServiceClient{
		listApp: connect_go.NewClient[sdp_go.ListAppRequest, sdp_go.ListAppResponse](
			httpClient,
			baseURL+"/changes.ChangesService/ListApp",
			opts...,
		),
		createApp: connect_go.NewClient[sdp_go.CreateAppRequest, sdp_go.CreateAppResponse](
			httpClient,
			baseURL+"/changes.ChangesService/CreateApp",
			opts...,
		),
		getApp: connect_go.NewClient[sdp_go.GetAppRequest, sdp_go.GetAppResponse](
			httpClient,
			baseURL+"/changes.ChangesService/GetApp",
			opts...,
		),
		updateApp: connect_go.NewClient[sdp_go.UpdateAppRequest, sdp_go.UpdateAppResponse](
			httpClient,
			baseURL+"/changes.ChangesService/UpdateApp",
			opts...,
		),
		deleteApp: connect_go.NewClient[sdp_go.DeleteAppRequest, sdp_go.DeleteAppResponse](
			httpClient,
			baseURL+"/changes.ChangesService/DeleteApp",
			opts...,
		),
		listChange: connect_go.NewClient[sdp_go.ListChangeRequest, sdp_go.ListChangeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/ListChange",
			opts...,
		),
		createChange: connect_go.NewClient[sdp_go.CreateChangeRequest, sdp_go.CreateChangeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/CreateChange",
			opts...,
		),
		getChange: connect_go.NewClient[sdp_go.GetChangeRequest, sdp_go.GetChangeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/GetChange",
			opts...,
		),
		updateChange: connect_go.NewClient[sdp_go.UpdateChangeRequest, sdp_go.UpdateChangeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/UpdateChange",
			opts...,
		),
		deleteChange: connect_go.NewClient[sdp_go.DeleteChangeRequest, sdp_go.DeleteChangeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/DeleteChange",
			opts...,
		),
		getOnboarding: connect_go.NewClient[sdp_go.GetOnboardingRequest, sdp_go.GetOnboardingResponse](
			httpClient,
			baseURL+"/changes.ChangesService/GetOnboarding",
			opts...,
		),
		updateOnboarding: connect_go.NewClient[sdp_go.UpdateOnboardingRequest, sdp_go.UpdateOnboardingResponse](
			httpClient,
			baseURL+"/changes.ChangesService/UpdateOnboarding",
			opts...,
		),
		getChangesHome: connect_go.NewClient[sdp_go.GetChangesHomeRequest, sdp_go.GetChangesHomeResponse](
			httpClient,
			baseURL+"/changes.ChangesService/GetChangesHome",
			opts...,
		),
	}
}

// changesServiceClient implements ChangesServiceClient.
type changesServiceClient struct {
	listApp          *connect_go.Client[sdp_go.ListAppRequest, sdp_go.ListAppResponse]
	createApp        *connect_go.Client[sdp_go.CreateAppRequest, sdp_go.CreateAppResponse]
	getApp           *connect_go.Client[sdp_go.GetAppRequest, sdp_go.GetAppResponse]
	updateApp        *connect_go.Client[sdp_go.UpdateAppRequest, sdp_go.UpdateAppResponse]
	deleteApp        *connect_go.Client[sdp_go.DeleteAppRequest, sdp_go.DeleteAppResponse]
	listChange       *connect_go.Client[sdp_go.ListChangeRequest, sdp_go.ListChangeResponse]
	createChange     *connect_go.Client[sdp_go.CreateChangeRequest, sdp_go.CreateChangeResponse]
	getChange        *connect_go.Client[sdp_go.GetChangeRequest, sdp_go.GetChangeResponse]
	updateChange     *connect_go.Client[sdp_go.UpdateChangeRequest, sdp_go.UpdateChangeResponse]
	deleteChange     *connect_go.Client[sdp_go.DeleteChangeRequest, sdp_go.DeleteChangeResponse]
	getOnboarding    *connect_go.Client[sdp_go.GetOnboardingRequest, sdp_go.GetOnboardingResponse]
	updateOnboarding *connect_go.Client[sdp_go.UpdateOnboardingRequest, sdp_go.UpdateOnboardingResponse]
	getChangesHome   *connect_go.Client[sdp_go.GetChangesHomeRequest, sdp_go.GetChangesHomeResponse]
}

// ListApp calls changes.ChangesService.ListApp.
func (c *changesServiceClient) ListApp(ctx context.Context, req *connect_go.Request[sdp_go.ListAppRequest]) (*connect_go.Response[sdp_go.ListAppResponse], error) {
	return c.listApp.CallUnary(ctx, req)
}

// CreateApp calls changes.ChangesService.CreateApp.
func (c *changesServiceClient) CreateApp(ctx context.Context, req *connect_go.Request[sdp_go.CreateAppRequest]) (*connect_go.Response[sdp_go.CreateAppResponse], error) {
	return c.createApp.CallUnary(ctx, req)
}

// GetApp calls changes.ChangesService.GetApp.
func (c *changesServiceClient) GetApp(ctx context.Context, req *connect_go.Request[sdp_go.GetAppRequest]) (*connect_go.Response[sdp_go.GetAppResponse], error) {
	return c.getApp.CallUnary(ctx, req)
}

// UpdateApp calls changes.ChangesService.UpdateApp.
func (c *changesServiceClient) UpdateApp(ctx context.Context, req *connect_go.Request[sdp_go.UpdateAppRequest]) (*connect_go.Response[sdp_go.UpdateAppResponse], error) {
	return c.updateApp.CallUnary(ctx, req)
}

// DeleteApp calls changes.ChangesService.DeleteApp.
func (c *changesServiceClient) DeleteApp(ctx context.Context, req *connect_go.Request[sdp_go.DeleteAppRequest]) (*connect_go.Response[sdp_go.DeleteAppResponse], error) {
	return c.deleteApp.CallUnary(ctx, req)
}

// ListChange calls changes.ChangesService.ListChange.
func (c *changesServiceClient) ListChange(ctx context.Context, req *connect_go.Request[sdp_go.ListChangeRequest]) (*connect_go.Response[sdp_go.ListChangeResponse], error) {
	return c.listChange.CallUnary(ctx, req)
}

// CreateChange calls changes.ChangesService.CreateChange.
func (c *changesServiceClient) CreateChange(ctx context.Context, req *connect_go.Request[sdp_go.CreateChangeRequest]) (*connect_go.Response[sdp_go.CreateChangeResponse], error) {
	return c.createChange.CallUnary(ctx, req)
}

// GetChange calls changes.ChangesService.GetChange.
func (c *changesServiceClient) GetChange(ctx context.Context, req *connect_go.Request[sdp_go.GetChangeRequest]) (*connect_go.Response[sdp_go.GetChangeResponse], error) {
	return c.getChange.CallUnary(ctx, req)
}

// UpdateChange calls changes.ChangesService.UpdateChange.
func (c *changesServiceClient) UpdateChange(ctx context.Context, req *connect_go.Request[sdp_go.UpdateChangeRequest]) (*connect_go.Response[sdp_go.UpdateChangeResponse], error) {
	return c.updateChange.CallUnary(ctx, req)
}

// DeleteChange calls changes.ChangesService.DeleteChange.
func (c *changesServiceClient) DeleteChange(ctx context.Context, req *connect_go.Request[sdp_go.DeleteChangeRequest]) (*connect_go.Response[sdp_go.DeleteChangeResponse], error) {
	return c.deleteChange.CallUnary(ctx, req)
}

// GetOnboarding calls changes.ChangesService.GetOnboarding.
func (c *changesServiceClient) GetOnboarding(ctx context.Context, req *connect_go.Request[sdp_go.GetOnboardingRequest]) (*connect_go.Response[sdp_go.GetOnboardingResponse], error) {
	return c.getOnboarding.CallUnary(ctx, req)
}

// UpdateOnboarding calls changes.ChangesService.UpdateOnboarding.
func (c *changesServiceClient) UpdateOnboarding(ctx context.Context, req *connect_go.Request[sdp_go.UpdateOnboardingRequest]) (*connect_go.Response[sdp_go.UpdateOnboardingResponse], error) {
	return c.updateOnboarding.CallUnary(ctx, req)
}

// GetChangesHome calls changes.ChangesService.GetChangesHome.
func (c *changesServiceClient) GetChangesHome(ctx context.Context, req *connect_go.Request[sdp_go.GetChangesHomeRequest]) (*connect_go.Response[sdp_go.GetChangesHomeResponse], error) {
	return c.getChangesHome.CallUnary(ctx, req)
}

// ChangesServiceHandler is an implementation of the changes.ChangesService service.
type ChangesServiceHandler interface {
	ListApp(context.Context, *connect_go.Request[sdp_go.ListAppRequest]) (*connect_go.Response[sdp_go.ListAppResponse], error)
	CreateApp(context.Context, *connect_go.Request[sdp_go.CreateAppRequest]) (*connect_go.Response[sdp_go.CreateAppResponse], error)
	GetApp(context.Context, *connect_go.Request[sdp_go.GetAppRequest]) (*connect_go.Response[sdp_go.GetAppResponse], error)
	UpdateApp(context.Context, *connect_go.Request[sdp_go.UpdateAppRequest]) (*connect_go.Response[sdp_go.UpdateAppResponse], error)
	DeleteApp(context.Context, *connect_go.Request[sdp_go.DeleteAppRequest]) (*connect_go.Response[sdp_go.DeleteAppResponse], error)
	ListChange(context.Context, *connect_go.Request[sdp_go.ListChangeRequest]) (*connect_go.Response[sdp_go.ListChangeResponse], error)
	CreateChange(context.Context, *connect_go.Request[sdp_go.CreateChangeRequest]) (*connect_go.Response[sdp_go.CreateChangeResponse], error)
	GetChange(context.Context, *connect_go.Request[sdp_go.GetChangeRequest]) (*connect_go.Response[sdp_go.GetChangeResponse], error)
	UpdateChange(context.Context, *connect_go.Request[sdp_go.UpdateChangeRequest]) (*connect_go.Response[sdp_go.UpdateChangeResponse], error)
	DeleteChange(context.Context, *connect_go.Request[sdp_go.DeleteChangeRequest]) (*connect_go.Response[sdp_go.DeleteChangeResponse], error)
	GetOnboarding(context.Context, *connect_go.Request[sdp_go.GetOnboardingRequest]) (*connect_go.Response[sdp_go.GetOnboardingResponse], error)
	UpdateOnboarding(context.Context, *connect_go.Request[sdp_go.UpdateOnboardingRequest]) (*connect_go.Response[sdp_go.UpdateOnboardingResponse], error)
	GetChangesHome(context.Context, *connect_go.Request[sdp_go.GetChangesHomeRequest]) (*connect_go.Response[sdp_go.GetChangesHomeResponse], error)
}

// NewChangesServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewChangesServiceHandler(svc ChangesServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/changes.ChangesService/ListApp", connect_go.NewUnaryHandler(
		"/changes.ChangesService/ListApp",
		svc.ListApp,
		opts...,
	))
	mux.Handle("/changes.ChangesService/CreateApp", connect_go.NewUnaryHandler(
		"/changes.ChangesService/CreateApp",
		svc.CreateApp,
		opts...,
	))
	mux.Handle("/changes.ChangesService/GetApp", connect_go.NewUnaryHandler(
		"/changes.ChangesService/GetApp",
		svc.GetApp,
		opts...,
	))
	mux.Handle("/changes.ChangesService/UpdateApp", connect_go.NewUnaryHandler(
		"/changes.ChangesService/UpdateApp",
		svc.UpdateApp,
		opts...,
	))
	mux.Handle("/changes.ChangesService/DeleteApp", connect_go.NewUnaryHandler(
		"/changes.ChangesService/DeleteApp",
		svc.DeleteApp,
		opts...,
	))
	mux.Handle("/changes.ChangesService/ListChange", connect_go.NewUnaryHandler(
		"/changes.ChangesService/ListChange",
		svc.ListChange,
		opts...,
	))
	mux.Handle("/changes.ChangesService/CreateChange", connect_go.NewUnaryHandler(
		"/changes.ChangesService/CreateChange",
		svc.CreateChange,
		opts...,
	))
	mux.Handle("/changes.ChangesService/GetChange", connect_go.NewUnaryHandler(
		"/changes.ChangesService/GetChange",
		svc.GetChange,
		opts...,
	))
	mux.Handle("/changes.ChangesService/UpdateChange", connect_go.NewUnaryHandler(
		"/changes.ChangesService/UpdateChange",
		svc.UpdateChange,
		opts...,
	))
	mux.Handle("/changes.ChangesService/DeleteChange", connect_go.NewUnaryHandler(
		"/changes.ChangesService/DeleteChange",
		svc.DeleteChange,
		opts...,
	))
	mux.Handle("/changes.ChangesService/GetOnboarding", connect_go.NewUnaryHandler(
		"/changes.ChangesService/GetOnboarding",
		svc.GetOnboarding,
		opts...,
	))
	mux.Handle("/changes.ChangesService/UpdateOnboarding", connect_go.NewUnaryHandler(
		"/changes.ChangesService/UpdateOnboarding",
		svc.UpdateOnboarding,
		opts...,
	))
	mux.Handle("/changes.ChangesService/GetChangesHome", connect_go.NewUnaryHandler(
		"/changes.ChangesService/GetChangesHome",
		svc.GetChangesHome,
		opts...,
	))
	return "/changes.ChangesService/", mux
}

// UnimplementedChangesServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedChangesServiceHandler struct{}

func (UnimplementedChangesServiceHandler) ListApp(context.Context, *connect_go.Request[sdp_go.ListAppRequest]) (*connect_go.Response[sdp_go.ListAppResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.ListApp is not implemented"))
}

func (UnimplementedChangesServiceHandler) CreateApp(context.Context, *connect_go.Request[sdp_go.CreateAppRequest]) (*connect_go.Response[sdp_go.CreateAppResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.CreateApp is not implemented"))
}

func (UnimplementedChangesServiceHandler) GetApp(context.Context, *connect_go.Request[sdp_go.GetAppRequest]) (*connect_go.Response[sdp_go.GetAppResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.GetApp is not implemented"))
}

func (UnimplementedChangesServiceHandler) UpdateApp(context.Context, *connect_go.Request[sdp_go.UpdateAppRequest]) (*connect_go.Response[sdp_go.UpdateAppResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.UpdateApp is not implemented"))
}

func (UnimplementedChangesServiceHandler) DeleteApp(context.Context, *connect_go.Request[sdp_go.DeleteAppRequest]) (*connect_go.Response[sdp_go.DeleteAppResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.DeleteApp is not implemented"))
}

func (UnimplementedChangesServiceHandler) ListChange(context.Context, *connect_go.Request[sdp_go.ListChangeRequest]) (*connect_go.Response[sdp_go.ListChangeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.ListChange is not implemented"))
}

func (UnimplementedChangesServiceHandler) CreateChange(context.Context, *connect_go.Request[sdp_go.CreateChangeRequest]) (*connect_go.Response[sdp_go.CreateChangeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.CreateChange is not implemented"))
}

func (UnimplementedChangesServiceHandler) GetChange(context.Context, *connect_go.Request[sdp_go.GetChangeRequest]) (*connect_go.Response[sdp_go.GetChangeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.GetChange is not implemented"))
}

func (UnimplementedChangesServiceHandler) UpdateChange(context.Context, *connect_go.Request[sdp_go.UpdateChangeRequest]) (*connect_go.Response[sdp_go.UpdateChangeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.UpdateChange is not implemented"))
}

func (UnimplementedChangesServiceHandler) DeleteChange(context.Context, *connect_go.Request[sdp_go.DeleteChangeRequest]) (*connect_go.Response[sdp_go.DeleteChangeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.DeleteChange is not implemented"))
}

func (UnimplementedChangesServiceHandler) GetOnboarding(context.Context, *connect_go.Request[sdp_go.GetOnboardingRequest]) (*connect_go.Response[sdp_go.GetOnboardingResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.GetOnboarding is not implemented"))
}

func (UnimplementedChangesServiceHandler) UpdateOnboarding(context.Context, *connect_go.Request[sdp_go.UpdateOnboardingRequest]) (*connect_go.Response[sdp_go.UpdateOnboardingResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.UpdateOnboarding is not implemented"))
}

func (UnimplementedChangesServiceHandler) GetChangesHome(context.Context, *connect_go.Request[sdp_go.GetChangesHomeRequest]) (*connect_go.Response[sdp_go.GetChangesHomeResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("changes.ChangesService.GetChangesHome is not implemented"))
}
