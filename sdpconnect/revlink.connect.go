// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: revlink.proto

package sdpconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	sdp_go "github.com/overmindtech/sdp-go"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// RevlinkServiceName is the fully-qualified name of the RevlinkService service.
	RevlinkServiceName = "revlink.RevlinkService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// RevlinkServiceGetReverseLinksProcedure is the fully-qualified name of the RevlinkService's
	// GetReverseLinks RPC.
	RevlinkServiceGetReverseLinksProcedure = "/revlink.RevlinkService/GetReverseLinks"
	// RevlinkServiceIngestGatewayResponsesProcedure is the fully-qualified name of the RevlinkService's
	// IngestGatewayResponses RPC.
	RevlinkServiceIngestGatewayResponsesProcedure = "/revlink.RevlinkService/IngestGatewayResponses"
)

// RevlinkServiceClient is a client for the revlink.RevlinkService service.
type RevlinkServiceClient interface {
	// Gets reverse links for a given item
	GetReverseLinks(context.Context, *connect_go.Request[sdp_go.GetReverseLinksRequest]) (*connect_go.Response[sdp_go.GetReverseLinksResponse], error)
	// Ingests a stream of gateway responses
	IngestGatewayResponses(context.Context) *connect_go.ClientStreamForClient[sdp_go.IngestGatewayResponseRequest, sdp_go.IngestGatewayResponsesResponse]
}

// NewRevlinkServiceClient constructs a client for the revlink.RevlinkService service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewRevlinkServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) RevlinkServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &revlinkServiceClient{
		getReverseLinks: connect_go.NewClient[sdp_go.GetReverseLinksRequest, sdp_go.GetReverseLinksResponse](
			httpClient,
			baseURL+RevlinkServiceGetReverseLinksProcedure,
			opts...,
		),
		ingestGatewayResponses: connect_go.NewClient[sdp_go.IngestGatewayResponseRequest, sdp_go.IngestGatewayResponsesResponse](
			httpClient,
			baseURL+RevlinkServiceIngestGatewayResponsesProcedure,
			opts...,
		),
	}
}

// revlinkServiceClient implements RevlinkServiceClient.
type revlinkServiceClient struct {
	getReverseLinks        *connect_go.Client[sdp_go.GetReverseLinksRequest, sdp_go.GetReverseLinksResponse]
	ingestGatewayResponses *connect_go.Client[sdp_go.IngestGatewayResponseRequest, sdp_go.IngestGatewayResponsesResponse]
}

// GetReverseLinks calls revlink.RevlinkService.GetReverseLinks.
func (c *revlinkServiceClient) GetReverseLinks(ctx context.Context, req *connect_go.Request[sdp_go.GetReverseLinksRequest]) (*connect_go.Response[sdp_go.GetReverseLinksResponse], error) {
	return c.getReverseLinks.CallUnary(ctx, req)
}

// IngestGatewayResponses calls revlink.RevlinkService.IngestGatewayResponses.
func (c *revlinkServiceClient) IngestGatewayResponses(ctx context.Context) *connect_go.ClientStreamForClient[sdp_go.IngestGatewayResponseRequest, sdp_go.IngestGatewayResponsesResponse] {
	return c.ingestGatewayResponses.CallClientStream(ctx)
}

// RevlinkServiceHandler is an implementation of the revlink.RevlinkService service.
type RevlinkServiceHandler interface {
	// Gets reverse links for a given item
	GetReverseLinks(context.Context, *connect_go.Request[sdp_go.GetReverseLinksRequest]) (*connect_go.Response[sdp_go.GetReverseLinksResponse], error)
	// Ingests a stream of gateway responses
	IngestGatewayResponses(context.Context, *connect_go.ClientStream[sdp_go.IngestGatewayResponseRequest]) (*connect_go.Response[sdp_go.IngestGatewayResponsesResponse], error)
}

// NewRevlinkServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewRevlinkServiceHandler(svc RevlinkServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	revlinkServiceGetReverseLinksHandler := connect_go.NewUnaryHandler(
		RevlinkServiceGetReverseLinksProcedure,
		svc.GetReverseLinks,
		opts...,
	)
	revlinkServiceIngestGatewayResponsesHandler := connect_go.NewClientStreamHandler(
		RevlinkServiceIngestGatewayResponsesProcedure,
		svc.IngestGatewayResponses,
		opts...,
	)
	return "/revlink.RevlinkService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case RevlinkServiceGetReverseLinksProcedure:
			revlinkServiceGetReverseLinksHandler.ServeHTTP(w, r)
		case RevlinkServiceIngestGatewayResponsesProcedure:
			revlinkServiceIngestGatewayResponsesHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedRevlinkServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedRevlinkServiceHandler struct{}

func (UnimplementedRevlinkServiceHandler) GetReverseLinks(context.Context, *connect_go.Request[sdp_go.GetReverseLinksRequest]) (*connect_go.Response[sdp_go.GetReverseLinksResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("revlink.RevlinkService.GetReverseLinks is not implemented"))
}

func (UnimplementedRevlinkServiceHandler) IngestGatewayResponses(context.Context, *connect_go.ClientStream[sdp_go.IngestGatewayResponseRequest]) (*connect_go.Response[sdp_go.IngestGatewayResponsesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("revlink.RevlinkService.IngestGatewayResponses is not implemented"))
}
